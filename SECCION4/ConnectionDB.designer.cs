#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SECCION4
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LINQ")]
	public partial class ConnectionDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    #endregion
		
		public ConnectionDBDataContext() : 
				base(global::SECCION4.Properties.Settings.Default.LINQConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectionDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectionDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectionDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectionDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Empleado> Empleado
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iIdEmpleado;
		
		private string _cCodigoEmpleado;
		
		private string _cNombreEmpleado;
		
		private string _cApellidoPaterno;
		
		private string _cApellidoMaterno;
		
		private int _iEdad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniIdEmpleadoChanging(int value);
    partial void OniIdEmpleadoChanged();
    partial void OncCodigoEmpleadoChanging(string value);
    partial void OncCodigoEmpleadoChanged();
    partial void OncNombreEmpleadoChanging(string value);
    partial void OncNombreEmpleadoChanged();
    partial void OncApellidoPaternoChanging(string value);
    partial void OncApellidoPaternoChanged();
    partial void OncApellidoMaternoChanging(string value);
    partial void OncApellidoMaternoChanged();
    partial void OniEdadChanging(int value);
    partial void OniEdadChanged();
    #endregion
		
		public Empleado()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iIdEmpleado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int iIdEmpleado
		{
			get
			{
				return this._iIdEmpleado;
			}
			set
			{
				if ((this._iIdEmpleado != value))
				{
					this.OniIdEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._iIdEmpleado = value;
					this.SendPropertyChanged("iIdEmpleado");
					this.OniIdEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cCodigoEmpleado", DbType="VarChar(8)")]
		public string cCodigoEmpleado
		{
			get
			{
				return this._cCodigoEmpleado;
			}
			set
			{
				if ((this._cCodigoEmpleado != value))
				{
					this.OncCodigoEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._cCodigoEmpleado = value;
					this.SendPropertyChanged("cCodigoEmpleado");
					this.OncCodigoEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cNombreEmpleado", DbType="VarChar(50)")]
		public string cNombreEmpleado
		{
			get
			{
				return this._cNombreEmpleado;
			}
			set
			{
				if ((this._cNombreEmpleado != value))
				{
					this.OncNombreEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._cNombreEmpleado = value;
					this.SendPropertyChanged("cNombreEmpleado");
					this.OncNombreEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cApellidoPaterno", DbType="VarChar(50)")]
		public string cApellidoPaterno
		{
			get
			{
				return this._cApellidoPaterno;
			}
			set
			{
				if ((this._cApellidoPaterno != value))
				{
					this.OncApellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._cApellidoPaterno = value;
					this.SendPropertyChanged("cApellidoPaterno");
					this.OncApellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cApellidoMaterno", DbType="VarChar(50)")]
		public string cApellidoMaterno
		{
			get
			{
				return this._cApellidoMaterno;
			}
			set
			{
				if ((this._cApellidoMaterno != value))
				{
					this.OncApellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._cApellidoMaterno = value;
					this.SendPropertyChanged("cApellidoMaterno");
					this.OncApellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEdad", DbType="Int NOT NULL")]
		public int iEdad
		{
			get
			{
				return this._iEdad;
			}
			set
			{
				if ((this._iEdad != value))
				{
					this.OniEdadChanging(value);
					this.SendPropertyChanging();
					this._iEdad = value;
					this.SendPropertyChanged("iEdad");
					this.OniEdadChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
